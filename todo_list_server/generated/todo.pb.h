// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: todo.proto
// Protobuf C++ Version: 5.29.3

#ifndef todo_2eproto_2epb_2eh
#define todo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_todo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_todo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_todo_2eproto;
namespace todo {
class AddItemRequest;
struct AddItemRequestDefaultTypeInternal;
extern AddItemRequestDefaultTypeInternal _AddItemRequest_default_instance_;
class AddItemResponse;
struct AddItemResponseDefaultTypeInternal;
extern AddItemResponseDefaultTypeInternal _AddItemResponse_default_instance_;
class ChangeNotification;
struct ChangeNotificationDefaultTypeInternal;
extern ChangeNotificationDefaultTypeInternal _ChangeNotification_default_instance_;
class DeleteItemRequest;
struct DeleteItemRequestDefaultTypeInternal;
extern DeleteItemRequestDefaultTypeInternal _DeleteItemRequest_default_instance_;
class DeleteItemResponse;
struct DeleteItemResponseDefaultTypeInternal;
extern DeleteItemResponseDefaultTypeInternal _DeleteItemResponse_default_instance_;
class GetListRequest;
struct GetListRequestDefaultTypeInternal;
extern GetListRequestDefaultTypeInternal _GetListRequest_default_instance_;
class GetListResponse;
struct GetListResponseDefaultTypeInternal;
extern GetListResponseDefaultTypeInternal _GetListResponse_default_instance_;
class SubscribeRequest;
struct SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class TodoItem;
struct TodoItemDefaultTypeInternal;
extern TodoItemDefaultTypeInternal _TodoItem_default_instance_;
class UpdateStatusRequest;
struct UpdateStatusRequestDefaultTypeInternal;
extern UpdateStatusRequestDefaultTypeInternal _UpdateStatusRequest_default_instance_;
class UpdateStatusResponse;
struct UpdateStatusResponseDefaultTypeInternal;
extern UpdateStatusResponseDefaultTypeInternal _UpdateStatusResponse_default_instance_;
}  // namespace todo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace todo {
enum Status : int {
  PENDING = 0,
  IN_PROGRESS = 1,
  COMPLETED = 2,
  CANCELED = 3,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Status_IsValid(int value);
extern const uint32_t Status_internal_data_[];
constexpr Status Status_MIN = static_cast<Status>(0);
constexpr Status Status_MAX = static_cast<Status>(3);
constexpr int Status_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Status_descriptor();
template <typename T>
const std::string& Status_Name(T value) {
  static_assert(std::is_same<T, Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return Status_Name(static_cast<Status>(value));
}
template <>
inline const std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Status_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Status_Parse(absl::string_view name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
      Status_descriptor(), name, value);
}
enum ChangeType : int {
  ADD = 0,
  UPDATE = 1,
  REMOVE = 2,
  ChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ChangeType_IsValid(int value);
extern const uint32_t ChangeType_internal_data_[];
constexpr ChangeType ChangeType_MIN = static_cast<ChangeType>(0);
constexpr ChangeType ChangeType_MAX = static_cast<ChangeType>(2);
constexpr int ChangeType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ChangeType_descriptor();
template <typename T>
const std::string& ChangeType_Name(T value) {
  static_assert(std::is_same<T, ChangeType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ChangeType_Name().");
  return ChangeType_Name(static_cast<ChangeType>(value));
}
template <>
inline const std::string& ChangeType_Name(ChangeType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChangeType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ChangeType_Parse(absl::string_view name, ChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeType>(
      ChangeType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateStatusResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:todo.UpdateStatusResponse) */ {
 public:
  inline UpdateStatusResponse() : UpdateStatusResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateStatusResponse(const UpdateStatusResponse& from) : UpdateStatusResponse(nullptr, from) {}
  inline UpdateStatusResponse(UpdateStatusResponse&& from) noexcept
      : UpdateStatusResponse(nullptr, std::move(from)) {}
  inline UpdateStatusResponse& operator=(const UpdateStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateStatusResponse& operator=(UpdateStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateStatusResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateStatusResponse*>(
        &_UpdateStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UpdateStatusResponse& a, UpdateStatusResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.UpdateStatusResponse"; }

 protected:
  explicit UpdateStatusResponse(::google::protobuf::Arena* arena);
  UpdateStatusResponse(::google::protobuf::Arena* arena, const UpdateStatusResponse& from);
  UpdateStatusResponse(::google::protobuf::Arena* arena, UpdateStatusResponse&& from) noexcept
      : UpdateStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:todo.UpdateStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateStatusResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class UpdateStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.UpdateStatusRequest) */ {
 public:
  inline UpdateStatusRequest() : UpdateStatusRequest(nullptr) {}
  ~UpdateStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateStatusRequest(const UpdateStatusRequest& from) : UpdateStatusRequest(nullptr, from) {}
  inline UpdateStatusRequest(UpdateStatusRequest&& from) noexcept
      : UpdateStatusRequest(nullptr, std::move(from)) {}
  inline UpdateStatusRequest& operator=(const UpdateStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateStatusRequest& operator=(UpdateStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateStatusRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateStatusRequest*>(
        &_UpdateStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(UpdateStatusRequest& a, UpdateStatusRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateStatusRequest& from) { UpdateStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.UpdateStatusRequest"; }

 protected:
  explicit UpdateStatusRequest(::google::protobuf::Arena* arena);
  UpdateStatusRequest(::google::protobuf::Arena* arena, const UpdateStatusRequest& from);
  UpdateStatusRequest(::google::protobuf::Arena* arena, UpdateStatusRequest&& from) noexcept
      : UpdateStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .todo.Status status = 3;
  void clear_status() ;
  ::todo::Status status() const;
  void set_status(::todo::Status value);

  private:
  ::todo::Status _internal_status() const;
  void _internal_set_status(::todo::Status value);

  public:
  // @@protoc_insertion_point(class_scope:todo.UpdateStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateStatusRequest& from_msg);
    ::int32_t id_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class TodoItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.TodoItem) */ {
 public:
  inline TodoItem() : TodoItem(nullptr) {}
  ~TodoItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TodoItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TodoItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TodoItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline TodoItem(const TodoItem& from) : TodoItem(nullptr, from) {}
  inline TodoItem(TodoItem&& from) noexcept
      : TodoItem(nullptr, std::move(from)) {}
  inline TodoItem& operator=(const TodoItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TodoItem& operator=(TodoItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TodoItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const TodoItem* internal_default_instance() {
    return reinterpret_cast<const TodoItem*>(
        &_TodoItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TodoItem& a, TodoItem& b) { a.Swap(&b); }
  inline void Swap(TodoItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TodoItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TodoItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TodoItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TodoItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TodoItem& from) { TodoItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TodoItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.TodoItem"; }

 protected:
  explicit TodoItem(::google::protobuf::Arena* arena);
  TodoItem(::google::protobuf::Arena* arena, const TodoItem& from);
  TodoItem(::google::protobuf::Arena* arena, TodoItem&& from) noexcept
      : TodoItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .todo.Status status = 3;
  void clear_status() ;
  ::todo::Status status() const;
  void set_status(::todo::Status value);

  private:
  ::todo::Status _internal_status() const;
  void _internal_set_status(::todo::Status value);

  public:
  // @@protoc_insertion_point(class_scope:todo.TodoItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TodoItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::int32_t id_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class SubscribeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:todo.SubscribeRequest) */ {
 public:
  inline SubscribeRequest() : SubscribeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRequest(const SubscribeRequest& from) : SubscribeRequest(nullptr, from) {}
  inline SubscribeRequest(SubscribeRequest&& from) noexcept
      : SubscribeRequest(nullptr, std::move(from)) {}
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
        &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.SubscribeRequest"; }

 protected:
  explicit SubscribeRequest(::google::protobuf::Arena* arena);
  SubscribeRequest(::google::protobuf::Arena* arena, const SubscribeRequest& from);
  SubscribeRequest(::google::protobuf::Arena* arena, SubscribeRequest&& from) noexcept
      : SubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:todo.SubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class GetListRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:todo.GetListRequest) */ {
 public:
  inline GetListRequest() : GetListRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetListRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetListRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetListRequest(const GetListRequest& from) : GetListRequest(nullptr, from) {}
  inline GetListRequest(GetListRequest&& from) noexcept
      : GetListRequest(nullptr, std::move(from)) {}
  inline GetListRequest& operator=(const GetListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetListRequest& operator=(GetListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetListRequest* internal_default_instance() {
    return reinterpret_cast<const GetListRequest*>(
        &_GetListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetListRequest& a, GetListRequest& b) { a.Swap(&b); }
  inline void Swap(GetListRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetListRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetListRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.GetListRequest"; }

 protected:
  explicit GetListRequest(::google::protobuf::Arena* arena);
  GetListRequest(::google::protobuf::Arena* arena, const GetListRequest& from);
  GetListRequest(::google::protobuf::Arena* arena, GetListRequest&& from) noexcept
      : GetListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:todo.GetListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetListRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class DeleteItemResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:todo.DeleteItemResponse) */ {
 public:
  inline DeleteItemResponse() : DeleteItemResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteItemResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteItemResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteItemResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteItemResponse(const DeleteItemResponse& from) : DeleteItemResponse(nullptr, from) {}
  inline DeleteItemResponse(DeleteItemResponse&& from) noexcept
      : DeleteItemResponse(nullptr, std::move(from)) {}
  inline DeleteItemResponse& operator=(const DeleteItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteItemResponse& operator=(DeleteItemResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteItemResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteItemResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteItemResponse*>(
        &_DeleteItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DeleteItemResponse& a, DeleteItemResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteItemResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteItemResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteItemResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteItemResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteItemResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteItemResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.DeleteItemResponse"; }

 protected:
  explicit DeleteItemResponse(::google::protobuf::Arena* arena);
  DeleteItemResponse(::google::protobuf::Arena* arena, const DeleteItemResponse& from);
  DeleteItemResponse(::google::protobuf::Arena* arena, DeleteItemResponse&& from) noexcept
      : DeleteItemResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:todo.DeleteItemResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteItemResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class DeleteItemRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.DeleteItemRequest) */ {
 public:
  inline DeleteItemRequest() : DeleteItemRequest(nullptr) {}
  ~DeleteItemRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteItemRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteItemRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteItemRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteItemRequest(const DeleteItemRequest& from) : DeleteItemRequest(nullptr, from) {}
  inline DeleteItemRequest(DeleteItemRequest&& from) noexcept
      : DeleteItemRequest(nullptr, std::move(from)) {}
  inline DeleteItemRequest& operator=(const DeleteItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteItemRequest& operator=(DeleteItemRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteItemRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteItemRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteItemRequest*>(
        &_DeleteItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DeleteItemRequest& a, DeleteItemRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteItemRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteItemRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteItemRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteItemRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteItemRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteItemRequest& from) { DeleteItemRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteItemRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.DeleteItemRequest"; }

 protected:
  explicit DeleteItemRequest(::google::protobuf::Arena* arena);
  DeleteItemRequest(::google::protobuf::Arena* arena, const DeleteItemRequest& from);
  DeleteItemRequest(::google::protobuf::Arena* arena, DeleteItemRequest&& from) noexcept
      : DeleteItemRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:todo.DeleteItemRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteItemRequest& from_msg);
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class AddItemRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.AddItemRequest) */ {
 public:
  inline AddItemRequest() : AddItemRequest(nullptr) {}
  ~AddItemRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddItemRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddItemRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddItemRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddItemRequest(const AddItemRequest& from) : AddItemRequest(nullptr, from) {}
  inline AddItemRequest(AddItemRequest&& from) noexcept
      : AddItemRequest(nullptr, std::move(from)) {}
  inline AddItemRequest& operator=(const AddItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddItemRequest& operator=(AddItemRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddItemRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddItemRequest* internal_default_instance() {
    return reinterpret_cast<const AddItemRequest*>(
        &_AddItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AddItemRequest& a, AddItemRequest& b) { a.Swap(&b); }
  inline void Swap(AddItemRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddItemRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddItemRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddItemRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddItemRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddItemRequest& from) { AddItemRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddItemRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.AddItemRequest"; }

 protected:
  explicit AddItemRequest(::google::protobuf::Arena* arena);
  AddItemRequest(::google::protobuf::Arena* arena, const AddItemRequest& from);
  AddItemRequest(::google::protobuf::Arena* arena, AddItemRequest&& from) noexcept
      : AddItemRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 1,
  };
  // string description = 1;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:todo.AddItemRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddItemRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class GetListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.GetListResponse) */ {
 public:
  inline GetListResponse() : GetListResponse(nullptr) {}
  ~GetListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetListResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetListResponse(const GetListResponse& from) : GetListResponse(nullptr, from) {}
  inline GetListResponse(GetListResponse&& from) noexcept
      : GetListResponse(nullptr, std::move(from)) {}
  inline GetListResponse& operator=(const GetListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetListResponse& operator=(GetListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetListResponse* internal_default_instance() {
    return reinterpret_cast<const GetListResponse*>(
        &_GetListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GetListResponse& a, GetListResponse& b) { a.Swap(&b); }
  inline void Swap(GetListResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetListResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetListResponse& from) { GetListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetListResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.GetListResponse"; }

 protected:
  explicit GetListResponse(::google::protobuf::Arena* arena);
  GetListResponse(::google::protobuf::Arena* arena, const GetListResponse& from);
  GetListResponse(::google::protobuf::Arena* arena, GetListResponse&& from) noexcept
      : GetListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .todo.TodoItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::todo::TodoItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::todo::TodoItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::todo::TodoItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::todo::TodoItem>* _internal_mutable_items();
  public:
  const ::todo::TodoItem& items(int index) const;
  ::todo::TodoItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::todo::TodoItem>& items() const;
  // @@protoc_insertion_point(class_scope:todo.GetListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetListResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::todo::TodoItem > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class ChangeNotification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.ChangeNotification) */ {
 public:
  inline ChangeNotification() : ChangeNotification(nullptr) {}
  ~ChangeNotification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChangeNotification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChangeNotification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChangeNotification(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChangeNotification(const ChangeNotification& from) : ChangeNotification(nullptr, from) {}
  inline ChangeNotification(ChangeNotification&& from) noexcept
      : ChangeNotification(nullptr, std::move(from)) {}
  inline ChangeNotification& operator=(const ChangeNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeNotification& operator=(ChangeNotification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeNotification& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kItem = 2,
    kRemovedItemId = 3,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const ChangeNotification* internal_default_instance() {
    return reinterpret_cast<const ChangeNotification*>(
        &_ChangeNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ChangeNotification& a, ChangeNotification& b) { a.Swap(&b); }
  inline void Swap(ChangeNotification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeNotification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeNotification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChangeNotification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChangeNotification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChangeNotification& from) { ChangeNotification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChangeNotification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.ChangeNotification"; }

 protected:
  explicit ChangeNotification(::google::protobuf::Arena* arena);
  ChangeNotification(::google::protobuf::Arena* arena, const ChangeNotification& from);
  ChangeNotification(::google::protobuf::Arena* arena, ChangeNotification&& from) noexcept
      : ChangeNotification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kItemFieldNumber = 2,
    kRemovedItemIdFieldNumber = 3,
  };
  // .todo.ChangeType type = 1;
  void clear_type() ;
  ::todo::ChangeType type() const;
  void set_type(::todo::ChangeType value);

  private:
  ::todo::ChangeType _internal_type() const;
  void _internal_set_type(::todo::ChangeType value);

  public:
  // .todo.TodoItem item = 2;
  bool has_item() const;
  private:
  bool _internal_has_item() const;

  public:
  void clear_item() ;
  const ::todo::TodoItem& item() const;
  PROTOBUF_NODISCARD ::todo::TodoItem* release_item();
  ::todo::TodoItem* mutable_item();
  void set_allocated_item(::todo::TodoItem* value);
  void unsafe_arena_set_allocated_item(::todo::TodoItem* value);
  ::todo::TodoItem* unsafe_arena_release_item();

  private:
  const ::todo::TodoItem& _internal_item() const;
  ::todo::TodoItem* _internal_mutable_item();

  public:
  // int32 removed_item_id = 3;
  bool has_removed_item_id() const;
  void clear_removed_item_id() ;
  ::int32_t removed_item_id() const;
  void set_removed_item_id(::int32_t value);

  private:
  ::int32_t _internal_removed_item_id() const;
  void _internal_set_removed_item_id(::int32_t value);

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:todo.ChangeNotification)
 private:
  class _Internal;
  void set_has_item();
  void set_has_removed_item_id();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChangeNotification& from_msg);
    int type_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::todo::TodoItem* item_;
      ::int32_t removed_item_id_;
    } payload_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class AddItemResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:todo.AddItemResponse) */ {
 public:
  inline AddItemResponse() : AddItemResponse(nullptr) {}
  ~AddItemResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddItemResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddItemResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddItemResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddItemResponse(const AddItemResponse& from) : AddItemResponse(nullptr, from) {}
  inline AddItemResponse(AddItemResponse&& from) noexcept
      : AddItemResponse(nullptr, std::move(from)) {}
  inline AddItemResponse& operator=(const AddItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddItemResponse& operator=(AddItemResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddItemResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddItemResponse* internal_default_instance() {
    return reinterpret_cast<const AddItemResponse*>(
        &_AddItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AddItemResponse& a, AddItemResponse& b) { a.Swap(&b); }
  inline void Swap(AddItemResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddItemResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddItemResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddItemResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddItemResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddItemResponse& from) { AddItemResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddItemResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "todo.AddItemResponse"; }

 protected:
  explicit AddItemResponse(::google::protobuf::Arena* arena);
  AddItemResponse(::google::protobuf::Arena* arena, const AddItemResponse& from);
  AddItemResponse(::google::protobuf::Arena* arena, AddItemResponse&& from) noexcept
      : AddItemResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemFieldNumber = 1,
  };
  // .todo.TodoItem item = 1;
  bool has_item() const;
  void clear_item() ;
  const ::todo::TodoItem& item() const;
  PROTOBUF_NODISCARD ::todo::TodoItem* release_item();
  ::todo::TodoItem* mutable_item();
  void set_allocated_item(::todo::TodoItem* value);
  void unsafe_arena_set_allocated_item(::todo::TodoItem* value);
  ::todo::TodoItem* unsafe_arena_release_item();

  private:
  const ::todo::TodoItem& _internal_item() const;
  ::todo::TodoItem* _internal_mutable_item();

  public:
  // @@protoc_insertion_point(class_scope:todo.AddItemResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddItemResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::todo::TodoItem* item_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TodoItem

// int32 id = 1;
inline void TodoItem::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t TodoItem::id() const {
  // @@protoc_insertion_point(field_get:todo.TodoItem.id)
  return _internal_id();
}
inline void TodoItem::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:todo.TodoItem.id)
}
inline ::int32_t TodoItem::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void TodoItem::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string description = 2;
inline void TodoItem::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& TodoItem::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:todo.TodoItem.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TodoItem::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:todo.TodoItem.description)
}
inline std::string* TodoItem::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:todo.TodoItem.description)
  return _s;
}
inline const std::string& TodoItem::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void TodoItem::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* TodoItem::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* TodoItem::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:todo.TodoItem.description)
  return _impl_.description_.Release();
}
inline void TodoItem::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:todo.TodoItem.description)
}

// .todo.Status status = 3;
inline void TodoItem::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::todo::Status TodoItem::status() const {
  // @@protoc_insertion_point(field_get:todo.TodoItem.status)
  return _internal_status();
}
inline void TodoItem::set_status(::todo::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:todo.TodoItem.status)
}
inline ::todo::Status TodoItem::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::todo::Status>(_impl_.status_);
}
inline void TodoItem::_internal_set_status(::todo::Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// AddItemRequest

// string description = 1;
inline void AddItemRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& AddItemRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:todo.AddItemRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddItemRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:todo.AddItemRequest.description)
}
inline std::string* AddItemRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:todo.AddItemRequest.description)
  return _s;
}
inline const std::string& AddItemRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void AddItemRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* AddItemRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* AddItemRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:todo.AddItemRequest.description)
  return _impl_.description_.Release();
}
inline void AddItemRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:todo.AddItemRequest.description)
}

// -------------------------------------------------------------------

// AddItemResponse

// .todo.TodoItem item = 1;
inline bool AddItemResponse::has_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_ != nullptr);
  return value;
}
inline void AddItemResponse::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::todo::TodoItem& AddItemResponse::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::todo::TodoItem* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::todo::TodoItem&>(::todo::_TodoItem_default_instance_);
}
inline const ::todo::TodoItem& AddItemResponse::item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:todo.AddItemResponse.item)
  return _internal_item();
}
inline void AddItemResponse::unsafe_arena_set_allocated_item(::todo::TodoItem* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = reinterpret_cast<::todo::TodoItem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:todo.AddItemResponse.item)
}
inline ::todo::TodoItem* AddItemResponse::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::todo::TodoItem* released = _impl_.item_;
  _impl_.item_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::todo::TodoItem* AddItemResponse::unsafe_arena_release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:todo.AddItemResponse.item)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::todo::TodoItem* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::todo::TodoItem* AddItemResponse::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::todo::TodoItem>(GetArena());
    _impl_.item_ = reinterpret_cast<::todo::TodoItem*>(p);
  }
  return _impl_.item_;
}
inline ::todo::TodoItem* AddItemResponse::mutable_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::todo::TodoItem* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:todo.AddItemResponse.item)
  return _msg;
}
inline void AddItemResponse::set_allocated_item(::todo::TodoItem* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.item_ = reinterpret_cast<::todo::TodoItem*>(value);
  // @@protoc_insertion_point(field_set_allocated:todo.AddItemResponse.item)
}

// -------------------------------------------------------------------

// UpdateStatusRequest

// int32 id = 1;
inline void UpdateStatusRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t UpdateStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:todo.UpdateStatusRequest.id)
  return _internal_id();
}
inline void UpdateStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:todo.UpdateStatusRequest.id)
}
inline ::int32_t UpdateStatusRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void UpdateStatusRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .todo.Status status = 3;
inline void UpdateStatusRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::todo::Status UpdateStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:todo.UpdateStatusRequest.status)
  return _internal_status();
}
inline void UpdateStatusRequest::set_status(::todo::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:todo.UpdateStatusRequest.status)
}
inline ::todo::Status UpdateStatusRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::todo::Status>(_impl_.status_);
}
inline void UpdateStatusRequest::_internal_set_status(::todo::Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// UpdateStatusResponse

// -------------------------------------------------------------------

// DeleteItemRequest

// int32 id = 1;
inline void DeleteItemRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t DeleteItemRequest::id() const {
  // @@protoc_insertion_point(field_get:todo.DeleteItemRequest.id)
  return _internal_id();
}
inline void DeleteItemRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:todo.DeleteItemRequest.id)
}
inline ::int32_t DeleteItemRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteItemRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteItemResponse

// -------------------------------------------------------------------

// GetListRequest

// -------------------------------------------------------------------

// GetListResponse

// repeated .todo.TodoItem items = 1;
inline int GetListResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int GetListResponse::items_size() const {
  return _internal_items_size();
}
inline void GetListResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::todo::TodoItem* GetListResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:todo.GetListResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::todo::TodoItem>* GetListResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:todo.GetListResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::todo::TodoItem& GetListResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:todo.GetListResponse.items)
  return _internal_items().Get(index);
}
inline ::todo::TodoItem* GetListResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::todo::TodoItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:todo.GetListResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::todo::TodoItem>& GetListResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:todo.GetListResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::todo::TodoItem>&
GetListResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::todo::TodoItem>*
GetListResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// ChangeNotification

// .todo.ChangeType type = 1;
inline void ChangeNotification::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::todo::ChangeType ChangeNotification::type() const {
  // @@protoc_insertion_point(field_get:todo.ChangeNotification.type)
  return _internal_type();
}
inline void ChangeNotification::set_type(::todo::ChangeType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:todo.ChangeNotification.type)
}
inline ::todo::ChangeType ChangeNotification::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::todo::ChangeType>(_impl_.type_);
}
inline void ChangeNotification::_internal_set_type(::todo::ChangeType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .todo.TodoItem item = 2;
inline bool ChangeNotification::has_item() const {
  return payload_case() == kItem;
}
inline bool ChangeNotification::_internal_has_item() const {
  return payload_case() == kItem;
}
inline void ChangeNotification::set_has_item() {
  _impl_._oneof_case_[0] = kItem;
}
inline void ChangeNotification::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kItem) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.item_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.item_);
    }
    clear_has_payload();
  }
}
inline ::todo::TodoItem* ChangeNotification::release_item() {
  // @@protoc_insertion_point(field_release:todo.ChangeNotification.item)
  if (payload_case() == kItem) {
    clear_has_payload();
    auto* temp = _impl_.payload_.item_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.item_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::todo::TodoItem& ChangeNotification::_internal_item() const {
  return payload_case() == kItem ? *_impl_.payload_.item_ : reinterpret_cast<::todo::TodoItem&>(::todo::_TodoItem_default_instance_);
}
inline const ::todo::TodoItem& ChangeNotification::item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:todo.ChangeNotification.item)
  return _internal_item();
}
inline ::todo::TodoItem* ChangeNotification::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:todo.ChangeNotification.item)
  if (payload_case() == kItem) {
    clear_has_payload();
    auto* temp = _impl_.payload_.item_;
    _impl_.payload_.item_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChangeNotification::unsafe_arena_set_allocated_item(::todo::TodoItem* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_item();
    _impl_.payload_.item_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:todo.ChangeNotification.item)
}
inline ::todo::TodoItem* ChangeNotification::_internal_mutable_item() {
  if (payload_case() != kItem) {
    clear_payload();
    set_has_item();
    _impl_.payload_.item_ =
        ::google::protobuf::Message::DefaultConstruct<::todo::TodoItem>(GetArena());
  }
  return _impl_.payload_.item_;
}
inline ::todo::TodoItem* ChangeNotification::mutable_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::todo::TodoItem* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:todo.ChangeNotification.item)
  return _msg;
}

// int32 removed_item_id = 3;
inline bool ChangeNotification::has_removed_item_id() const {
  return payload_case() == kRemovedItemId;
}
inline void ChangeNotification::set_has_removed_item_id() {
  _impl_._oneof_case_[0] = kRemovedItemId;
}
inline void ChangeNotification::clear_removed_item_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kRemovedItemId) {
    _impl_.payload_.removed_item_id_ = 0;
    clear_has_payload();
  }
}
inline ::int32_t ChangeNotification::removed_item_id() const {
  // @@protoc_insertion_point(field_get:todo.ChangeNotification.removed_item_id)
  return _internal_removed_item_id();
}
inline void ChangeNotification::set_removed_item_id(::int32_t value) {
  if (payload_case() != kRemovedItemId) {
    clear_payload();
    set_has_removed_item_id();
  }
  _impl_.payload_.removed_item_id_ = value;
  // @@protoc_insertion_point(field_set:todo.ChangeNotification.removed_item_id)
}
inline ::int32_t ChangeNotification::_internal_removed_item_id() const {
  if (payload_case() == kRemovedItemId) {
    return _impl_.payload_.removed_item_id_;
  }
  return 0;
}

inline bool ChangeNotification::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void ChangeNotification::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline ChangeNotification::PayloadCase ChangeNotification::payload_case() const {
  return ChangeNotification::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SubscribeRequest

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace todo


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::todo::Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::todo::Status>() {
  return ::todo::Status_descriptor();
}
template <>
struct is_proto_enum<::todo::ChangeType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::todo::ChangeType>() {
  return ::todo::ChangeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // todo_2eproto_2epb_2eh
